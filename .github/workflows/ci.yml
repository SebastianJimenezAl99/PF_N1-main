name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Fix ESLint binary permissions
        run: chmod +x node_modules/.bin/eslint

      - name: Run ESLint
        run: npm run lint

  super-linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Super-Linter
        uses: github/super-linter@v5
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_JAVASCRIPT_ES: true

  test:
    runs-on: ubuntu-latest
    needs: [lint, super-linter]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Prepare coverage folder
        run: mkdir -p coverage

      - name: Fix Jest binary permissions
        run: chmod +x node_modules/.bin/jest

      - name: Run tests with coverage + reports
        run: npm test

      - name: Ensure coverage-summary.json exists
        run: |
          if [ ! -f coverage/coverage-summary.json ]; then
            echo "No coverage report found!"
            exit 1
          fi

      - name: Check coverage >= 24.5%
        run: |
          sudo apt-get update && sudo apt-get install -y jq bc
          COVERAGE=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          echo "Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 24.5" | bc -l) )); then
            echo "Coverage below 24.5%!"
            exit 1
          else
            echo "Coverage is good!"
          fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Upload HTML test report
        uses: actions/upload-artifact@v4
        with:
          name: html-test-report
          path: reports/test-report.html

      - name: Upload JUnit Test Results
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: reports/junit/junit.xml

      - name: Publish Test Summary
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: "reports/junit/junit.xml"

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build project (package files)
        run: zip -r build.zip ./*

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build.zip

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t pf_n1_app .

      - name: Test Docker image
       
        run: docker run --rm pf_n1_app node -v
